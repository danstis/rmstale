name: Build

on:
  push:
    branches:
      - main
      - master
      - beta
      - "feature/*"
      - "fix/*"
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:

jobs:
  golangci:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2 # https://github.com/marketplace/actions/run-golangci-lint
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: latest
  test:
    name: Test and Scan
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.15
        id: go

      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.10
        with:
          versionSpec: "5.x"

      - name: Version with GitVersion # https://github.com/marketplace/actions/use-actions
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.10

      - name: Run tests
        run: go test -v -coverprofile=coverage.out -covermode=count -json ./... > test-report.out

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2.1.0
        with:
          file: ./coverage.out # optional

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master # https://github.com/marketplace/actions/sonarcloud-scan
        if: ${{ github.actor != 'dependabot[bot]' }}
        with:
          args: >
            -Dsonar.projectVersion=${{ steps.gitversion.outputs.FullSemVer }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    name: Build
    needs: [test, golangci]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.17
        id: go

      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.10
        with:
          versionSpec: "5.x"

      - name: Version with GitVersion # https://github.com/marketplace/actions/use-actions
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.10

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        if: ${{ steps.gitversion.outputs.PreReleaseTagWithDash == '' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.gitversion.outputs.FullSemVer }}
          release_branches: main
          tag_prefix: v

      - name: Check out code
        uses: actions/checkout@v2.3.4
        if: ${{ steps.gitversion.outputs.PreReleaseTagWithDash == '' }}
        with:
          fetch-depth: 0

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2.8.0
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Replace version in NuSpec file
        uses: cschleiden/replace-tokens@v1
        with:
          files: '["rmstale.nuspec"]'

      - name: Create directory for chocolaty package
        run: mkdir -p ${{ github.workspace }}/bin/chocolatey

      - name: Package chocolaty binary # Output path refers to the mapped docker volume (/wksp)
        uses: crazy-max/ghaction-chocolatey@v1
        if: ${{ steps.gitversion.outputs.PreReleaseTagWithDash == '' }}
        with:
          args: pack rmstale.nuspec --outputdirectory /wksp/bin/chocolatey

      - name: Push package to chocolatey.org
        uses: crazy-max/ghaction-chocolatey@v1
        if: ${{ steps.gitversion.outputs.PreReleaseTagWithDash == '' }}
        with:
          args: push /wksp/bin/chocolatey/rmstale.${{ steps.gitversion.outputs.FullSemVer }}.nupkg --source https://push.chocolatey.org/ --apikey ${{ secrets.CHOCO_KEY }}
